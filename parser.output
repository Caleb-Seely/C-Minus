Grammar

    0 $accept: program $end

    1 program: %empty
    2        | decleration program

    3 decleration: NUMCONST
    4            | KEY
    5            | ID
    6            | STRINGCONST
    7            | OP
    8            | CHARCONST
    9            | CHARCONST_ESC
   10            | CHAR_ERR
   11            | BOOLCONST
   12            | INVALID
   13            | MULOP

   14 MULOP: ADDASS
   15      | SUBASS
   16      | MULASS
   17      | DIVASS
   18      | DEC
   19      | INC
   20      | NOTEQ
   21      | EQ
   22      | LESSEQ
   23      | GRETEQ
   24      | RANGE


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAR_ERR (258) 10
KEY (259) 4
NUMCONST (260) 3
ID (261) 5
CHARCONST (262) 8
CHARCONST_ESC (263) 9
RANGE (264) 24
STRINGCONST (265) 6
BOOLCONST (266) 11
OP (267) 7
INVALID (268) 12
ADDASS (269) 14
SUBASS (270) 15
MULASS (271) 16
DIVASS (272) 17
DEC (273) 18
INC (274) 19
NOTEQ (275) 20
EQ (276) 21
LESSEQ (277) 22
GRETEQ (278) 23


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1 2, on right: 0 2
decleration (26)
    on left: 3 4 5 6 7 8 9 10 11 12 13, on right: 2
MULOP (27)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 13


State 0

    0 $accept: . program $end

    CHAR_ERR       shift, and go to state 1
    KEY            shift, and go to state 2
    NUMCONST       shift, and go to state 3
    ID             shift, and go to state 4
    CHARCONST      shift, and go to state 5
    CHARCONST_ESC  shift, and go to state 6
    RANGE          shift, and go to state 7
    STRINGCONST    shift, and go to state 8
    BOOLCONST      shift, and go to state 9
    OP             shift, and go to state 10
    INVALID        shift, and go to state 11
    ADDASS         shift, and go to state 12
    SUBASS         shift, and go to state 13
    MULASS         shift, and go to state 14
    DIVASS         shift, and go to state 15
    DEC            shift, and go to state 16
    INC            shift, and go to state 17
    NOTEQ          shift, and go to state 18
    EQ             shift, and go to state 19
    LESSEQ         shift, and go to state 20
    GRETEQ         shift, and go to state 21

    $default  reduce using rule 1 (program)

    program      go to state 22
    decleration  go to state 23
    MULOP        go to state 24


State 1

   10 decleration: CHAR_ERR .

    $default  reduce using rule 10 (decleration)


State 2

    4 decleration: KEY .

    $default  reduce using rule 4 (decleration)


State 3

    3 decleration: NUMCONST .

    $default  reduce using rule 3 (decleration)


State 4

    5 decleration: ID .

    $default  reduce using rule 5 (decleration)


State 5

    8 decleration: CHARCONST .

    $default  reduce using rule 8 (decleration)


State 6

    9 decleration: CHARCONST_ESC .

    $default  reduce using rule 9 (decleration)


State 7

   24 MULOP: RANGE .

    $default  reduce using rule 24 (MULOP)


State 8

    6 decleration: STRINGCONST .

    $default  reduce using rule 6 (decleration)


State 9

   11 decleration: BOOLCONST .

    $default  reduce using rule 11 (decleration)


State 10

    7 decleration: OP .

    $default  reduce using rule 7 (decleration)


State 11

   12 decleration: INVALID .

    $default  reduce using rule 12 (decleration)


State 12

   14 MULOP: ADDASS .

    $default  reduce using rule 14 (MULOP)


State 13

   15 MULOP: SUBASS .

    $default  reduce using rule 15 (MULOP)


State 14

   16 MULOP: MULASS .

    $default  reduce using rule 16 (MULOP)


State 15

   17 MULOP: DIVASS .

    $default  reduce using rule 17 (MULOP)


State 16

   18 MULOP: DEC .

    $default  reduce using rule 18 (MULOP)


State 17

   19 MULOP: INC .

    $default  reduce using rule 19 (MULOP)


State 18

   20 MULOP: NOTEQ .

    $default  reduce using rule 20 (MULOP)


State 19

   21 MULOP: EQ .

    $default  reduce using rule 21 (MULOP)


State 20

   22 MULOP: LESSEQ .

    $default  reduce using rule 22 (MULOP)


State 21

   23 MULOP: GRETEQ .

    $default  reduce using rule 23 (MULOP)


State 22

    0 $accept: program . $end

    $end  shift, and go to state 25


State 23

    2 program: decleration . program

    CHAR_ERR       shift, and go to state 1
    KEY            shift, and go to state 2
    NUMCONST       shift, and go to state 3
    ID             shift, and go to state 4
    CHARCONST      shift, and go to state 5
    CHARCONST_ESC  shift, and go to state 6
    RANGE          shift, and go to state 7
    STRINGCONST    shift, and go to state 8
    BOOLCONST      shift, and go to state 9
    OP             shift, and go to state 10
    INVALID        shift, and go to state 11
    ADDASS         shift, and go to state 12
    SUBASS         shift, and go to state 13
    MULASS         shift, and go to state 14
    DIVASS         shift, and go to state 15
    DEC            shift, and go to state 16
    INC            shift, and go to state 17
    NOTEQ          shift, and go to state 18
    EQ             shift, and go to state 19
    LESSEQ         shift, and go to state 20
    GRETEQ         shift, and go to state 21

    $default  reduce using rule 1 (program)

    program      go to state 26
    decleration  go to state 23
    MULOP        go to state 24


State 24

   13 decleration: MULOP .

    $default  reduce using rule 13 (decleration)


State 25

    0 $accept: program $end .

    $default  accept


State 26

    2 program: decleration program .

    $default  reduce using rule 2 (program)
